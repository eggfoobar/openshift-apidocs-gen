const patchStrategyKey = "x-kubernetes-patch-strategy";
const patchMergeKeyKey = "x-kubernetes-patch-merge-key";
const typeKey = "x-kubernetes-group-version-kind";
const actionKey = "x-kubernetes-action";

// TODO: Fix to auto discover these resources
const defaultResourceMap = new Map([
  ["io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta", true],
  ["io.k8s.api.core.v1.SecretReference", true],
  ["io.k8s.api.core.v1.Affinity", true],
  ["io.k8s.api.core.v1.Container", true],
  ["io.k8s.api.core.v1.PodDNSConfig", true],
  ["io.k8s.api.core.v1.EphemeralContainer", true],
  ["io.k8s.api.core.v1.HostAlias", true],
  ["io.k8s.api.core.v1.LocalObjectReference", true],
  ["io.k8s.api.core.v1.Container", true],
  ["io.k8s.api.core.v1.PodOS", true],
  ["io.k8s.api.core.v1.PodReadinessGate", true],
  ["io.k8s.api.core.v1.PodResourceClaim", true],
  ["io.k8s.api.core.v1.PodSchedulingGate", true],
  ["io.k8s.api.core.v1.PodSecurityContext", true],
  ["io.k8s.api.core.v1.TopologySpreadConstraint", true],
  ["io.k8s.api.core.v1.Volume", true],
  ["io.k8s.api.core.v1.SecretReference", true],
  ["io.k8s.api.core.v1.SecretReference", true],
  ["io.k8s.api.core.v1.NodeSelector", true],
  ["io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1", true],
  ["io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails", true],
  ["io.k8s.api.core.v1.NodeAffinity", true ],
  ["io.k8s.api.core.v1.PodAffinity", true ],
  ["io.k8s.api.core.v1.PodAntiAffinity", true ],
  ["io.k8s.api.core.v1.EnvVar", true ],
  ["io.k8s.api.core.v1.EnvFromSource", true ],
  ["io.k8s.api.core.v1.Lifecycle", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.ContainerPort", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.ContainerResizePolicy", true ],
  ["io.k8s.api.core.v1.ResourceRequirements", true ],
  ["io.k8s.api.core.v1.SecurityContext", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.VolumeDevice", true ],
  ["io.k8s.api.core.v1.VolumeMount", true ],
  ["io.k8s.api.core.v1.EnvVar", true ],
  ["io.k8s.api.core.v1.EnvFromSource", true ],
  ["io.k8s.api.core.v1.Lifecycle", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.ContainerPort", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.ContainerResizePolicy", true ],
  ["io.k8s.api.core.v1.ResourceRequirements", true ],
  ["io.k8s.api.core.v1.SecurityContext", true ],
  ["io.k8s.api.core.v1.Probe", true ],
  ["io.k8s.api.core.v1.VolumeDevice", true ],
  ["io.k8s.api.core.v1.VolumeMount", true ],
  ["io.k8s.api.core.v1.NodeSelectorTerm", true ],
  ["io.k8s.api.core.v1.PodDNSConfigOption", true ],
  ["io.k8s.api.core.v1.ClaimSource", true ],
  ["io.k8s.api.core.v1.SELinuxOptions", true ],
  ["io.k8s.api.core.v1.SeccompProfile", true ],
  ["io.k8s.api.core.v1.Sysctl", true ],
  ["io.k8s.api.core.v1.WindowsSecurityContextOptions", true ],
  ["io.k8s.api.core.v1.AzureFileVolumeSource", true ],
  ["io.k8s.api.core.v1.CephFSVolumeSource", true ],
  ["io.k8s.api.core.v1.CinderVolumeSource", true ],
  ["io.k8s.api.core.v1.ConfigMapVolumeSource", true ],
  ["io.k8s.api.core.v1.CSIVolumeSource", true ],
  ["io.k8s.api.core.v1.DownwardAPIVolumeSource", true ],
  ["io.k8s.api.core.v1.EmptyDirVolumeSource", true ],
  ["io.k8s.api.core.v1.EphemeralVolumeSource", true ],
  ["io.k8s.api.core.v1.FlexVolumeSource", true ],
  ["io.k8s.api.core.v1.GitRepoVolumeSource", true ],
  ["io.k8s.api.core.v1.GlusterfsVolumeSource", true ],
  ["io.k8s.api.core.v1.ISCSIVolumeSource", true ],
  ["io.k8s.api.core.v1.ProjectedVolumeSource", true ],
  ["io.k8s.api.core.v1.RBDVolumeSource", true ],
  ["io.k8s.api.core.v1.ScaleIOVolumeSource", true ],
  ["io.k8s.api.core.v1.SecretVolumeSource", true ],
  ["io.k8s.api.core.v1.StorageOSVolumeSource", true ],
  ["io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause", true ],
  ["io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource", true ],
  ["io.k8s.api.core.v1.PersistentVolumeClaimTemplate", true ],
  ["io.k8s.api.core.v1.KeyToPath", true ],
  ["io.k8s.api.core.v1.DownwardAPIVolumeFile", true ],
  ["io.k8s.api.core.v1.ConfigMapEnvSource", true ],
  ["io.k8s.api.core.v1.SecretEnvSource", true ],
  ["io.k8s.api.core.v1.EnvVarSource", true ],
  ["io.k8s.api.core.v1.LifecycleHandler", true ],
  ["io.k8s.api.core.v1.LifecycleHandler", true ],
  ["io.k8s.api.core.v1.PreferredSchedulingTerm", true ],
  ["io.k8s.api.core.v1.NodeSelectorRequirement", true ],
  ["io.k8s.api.core.v1.NodeSelectorRequirement", true ],
  ["io.k8s.api.core.v1.WeightedPodAffinityTerm", true ],
  ["io.k8s.api.core.v1.PodAffinityTerm", true ],
  ["io.k8s.api.core.v1.WeightedPodAffinityTerm", true ],
  ["io.k8s.api.core.v1.PodAffinityTerm", true ],
  ["io.k8s.api.core.v1.ExecAction", true ],
  ["io.k8s.api.core.v1.GRPCAction", true ],
  ["io.k8s.api.core.v1.HTTPGetAction", true ],
  ["io.k8s.api.core.v1.TCPSocketAction", true ],
  ["io.k8s.api.core.v1.VolumeProjection", true ],
  ["io.k8s.api.core.v1.ResourceClaim", true ],
  ["io.k8s.api.core.v1.KeyToPath", true ],
  ["io.k8s.api.core.v1.Capabilities", true ],
  ["io.k8s.api.core.v1.ObjectFieldSelector", true ],
  ["io.k8s.api.core.v1.ResourceFieldSelector", true ],
  ["io.k8s.api.core.v1.ConfigMapKeySelector", true ],
  ["io.k8s.api.core.v1.ObjectFieldSelector", true ],
  ["io.k8s.api.core.v1.ResourceFieldSelector", true ],
  ["io.k8s.api.core.v1.SecretKeySelector", true ],
  ["io.k8s.api.core.v1.HTTPHeader", true ],
  ["io.k8s.api.core.v1.PersistentVolumeClaimSpec", true ],
  ["io.k8s.api.core.v1.ConfigMapProjection", true ],
  ["io.k8s.api.core.v1.DownwardAPIProjection", true ],
  ["io.k8s.api.core.v1.SecretProjection", true ],
  ["io.k8s.api.core.v1.ServiceAccountTokenProjection", true ],
  ["io.k8s.api.core.v1.TypedObjectReference", true],
]);

module.exports = {
  patchStrategyKey,
  patchMergeKeyKey,
  typeKey,
  actionKey,
  defaultResourceMap,
}
